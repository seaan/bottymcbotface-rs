name: Rust

on:
  push:
    branches: [ "main", "test-cicd" ]
  release:
    types: [created]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v5
    - run: rustup toolchain install stable --profile minimal\
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2.8.0
    - name: Compile
      id: compile
      uses: rust-build/rust-build.action@v1.4.5
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        RUSTTARGET: x86_64-unknown-linux-musl
        UPLOAD_MODE: none
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Binary
        path: |
          ${{ steps.compile.outputs.BUILT_ARCHIVE }}
          ${{ steps.compile.outputs.BUILT_CHECKSUM }}
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@v5
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Binary
          path: ./release
      - name: List files in release directory
        run: ls -l ./release
      - name: Unzip artifact
        run: |
          unzip -o ./release/Binary.zip -d ./release
        shell: bash
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/bottymcbotface-rs
          asset_name: bottymcbotface-rs
          asset_content_type: application/octet-stream
